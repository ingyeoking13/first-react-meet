{"version":3,"sources":["Components/Header.js","Components/Menu.js","Components/Article.js","Components/Terminal.js","App.js","reportWebVitals.js","index.js"],"names":["Header","class","Menu","useState","userList","setUserList","useEffect","socket","on","data","map","user","Article","props","message","setMessage","update","value","readOnly","Terminal","chat","setChat","onChange","target","onClick","emit","host","require","config","path","resolve","__dirname","io","App","childprops","setProps","connect","className","OnSubmit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qGAAA,wDAGO,SAASA,IACZ,OACI,wBAAQC,MAAM,aAAd,SACI,0D,0GCFL,SAASC,IACZ,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KAMA,OALAC,qBAAU,WACNC,IAAOC,GAAG,cAAc,SAACC,GACrBJ,EAAYI,SAIhB,qBAAKR,MAAM,cAAX,SACI,oCACKG,QADL,IACKA,OADL,EACKA,EAAUM,KAAI,SAACC,GAAD,OACX,6BAAKA,a,0GCXlB,SAASC,EAAQC,GACpB,MAA4BV,mBAAS,IAArC,mBAAKW,EAAL,KAAcC,EAAd,KACA,SAASC,EAAOC,GACZF,EAAWD,EAAU,KAAOG,GAShC,OAPAX,qBAAU,WACNC,IAAOC,GAAG,UAAWQ,MAOrB,yBAASf,MAAM,YAAf,SACI,0BACIA,MAAM,YACNiB,UAAU,EACVD,MAAOH,Q,0GClBhB,SAASK,EAASN,GACrB,MAAwBV,mBAAS,IAAjC,mBAAOiB,EAAP,KAAaC,EAAb,KACA,OACI,sBAAKpB,MAAM,kBAAX,UACI,0BACIA,MAAM,aACNqB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBF,EAAQE,EAAON,UAE7C,wBACIhB,MAAM,SACNuB,QAAS,WACLjB,IAAOkB,KAAK,UAAWL,IAH/B,yB,+SCFRM,EAAO,GAEXC,EAAQ,IAAUC,OAAO,CAAEC,KAAMA,IAAKC,QAAQC,EAAW,KAAM,cACpBL,EAAO,8BAGlD,IAAMnB,EAASyB,IAAGN,EAAM,IAoBTO,IAlBf,WACI,MAA+B9B,mBAAS,IAAxC,mBAAO+B,EAAP,KAAmBC,EAAnB,KAGA,OAFA5B,EAAO6B,UAGH,sBAAKC,UAAU,MAAf,UACKrC,cACAE,cACD,sBAAKD,MAAM,cAAX,UACKW,YAAQsB,GACRf,YAAS,CACNmB,SAAU,SAACrB,GAAD,OAAWkB,EAAS,CAAEf,KAAMH,gB,2GChB3CsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjB,EAAA,EAAD,MAEFkB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.da90ab1d.chunk.js","sourcesContent":["import React from 'react'\n\nimport './Header.css'\nexport function Header() {\n    return (\n        <header class=\"app-header\">\n            <h1>react with socket.io</h1>\n        </header>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport { socket } from '../App'\nimport './Menu.css'\n\nexport function Menu() {\n    const [userList, setUserList] = useState()\n    useEffect(() => {\n        socket.on('userUpdate', (data) => {\n            setUserList(data)\n        })\n    })\n    return (\n        <div class=\"drawer-menu\">\n            <ul>\n                {userList?.map((user) => (\n                    <li>{user}</li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { socket } from '../App'\nimport './Article.css'\n\nexport function Article(props) {\n    let [message, setMessage] = useState('')\n    function update(value) {\n        setMessage(message + '\\n' + value)\n    }\n    useEffect(() => {\n        socket.on('message', update)\n        // return function cleanup() {\n        //     socket.off('message', update)\n        // }\n    })\n\n    return (\n        <article class=\"main-area\">\n            <textarea\n                class=\"text-area\"\n                readOnly={true}\n                value={message}\n            ></textarea>\n        </article>\n    )\n}\n","import React, { useState } from 'react'\nimport { socket } from '../App'\nimport './Terminal.css'\nexport function Terminal(props) {\n    const [chat, setChat] = useState('')\n    return (\n        <div class=\"user-chat-input\">\n            <textarea\n                class=\"user-input\"\n                onChange={({ target }) => setChat(target.value)}\n            ></textarea>\n            <button\n                class=\"submit\"\n                onClick={() => {\n                    socket.emit('message', chat)\n                }}\n            >\n                submit\n            </button>\n        </div>\n    )\n}\n","import './App.css'\nimport { Header } from './Components/Header'\nimport { Menu } from './Components/Menu'\nimport { Article } from './Components/Article'\nimport { Terminal } from './Components/Terminal'\nimport { useState } from 'react'\n\nimport io from 'socket.io-client'\nimport path from 'path'\nlet host = ''\n\nrequire('dotenv').config({ path: path.resolve(__dirname, '..', '.env.dev') })\nif (process.env.NODE_ENV === 'production') host = 'http://101.101.218.26:3002/'\nelse host = 'http://127.0.0.1:3000'\n\nconst socket = io(host, {})\n\nfunction App() {\n    const [childprops, setProps] = useState({})\n    socket.connect()\n\n    return (\n        <div className=\"App\">\n            {Header()}\n            {Menu()}\n            <div class=\"float-right\">\n                {Article(childprops)}\n                {Terminal({\n                    OnSubmit: (value) => setProps({ chat: value }),\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default App\nexport { socket }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}