{"version":3,"sources":["Components/Article.js","Components/Terminal.js","App.js","Components/Header.js","Components/Menu.js","reportWebVitals.js","index.js"],"names":["Article","props","useState","message","setMessage","update","value","useEffect","socket","on","off","class","readOnly","Terminal","chat","setChat","onChange","target","onClick","emit","io","App","connect","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAIO,SAASA,EAAQC,GACpB,MAA4BC,mBAAS,IAArC,mBAAKC,EAAL,KAAcC,EAAd,KACA,SAASC,EAAOC,GACZF,EAAWD,EAAU,KAAOG,GAShC,OAPAC,qBAAU,WAEN,OADAC,EAAOC,GAAG,UAAWJ,GACd,WACHG,EAAOE,IAAI,UAAWL,OAK1B,yBAASM,MAAM,YAAf,SACI,0BACIA,MAAM,YACNC,UAAU,EACVN,MAAOH,M,MClBhB,SAASU,EAASZ,GACrB,MAAwBC,mBAAS,IAAjC,mBAAOY,EAAP,KAAaC,EAAb,KACA,OACI,sBAAKJ,MAAM,kBAAX,UACI,0BACIA,MAAM,aACNK,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBF,EAAQE,EAAOX,UAE7C,wBACIK,MAAM,SACNO,QAAS,WACLV,EAAOW,KAAK,UAAWL,IAH/B,uB,YCHNN,E,MAASY,GAAG,wBAAyB,IAoB5BC,MAlBf,WACI,MAA+BnB,mBAAS,IAAxC,mBAGA,OAHA,UACAM,EAAOc,UAGH,sBAAKC,UAAU,MAAf,UCVA,wBAAQZ,MAAM,aAAd,SACI,wDCFJ,qBAAKA,MAAM,cAAX,SACI,+BACI,mCACA,mCACA,mCACA,wCFSJ,sBAAKA,MAAM,cAAX,UACKX,IACAa,WGRFW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.be9f935c.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport { socket } from '../App'\nimport './Article.css'\n\nexport function Article(props) {\n    let [message, setMessage] = useState('')\n    function update(value) {\n        setMessage(message + '\\n' + value)\n    }\n    useEffect(() => {\n        socket.on('message', update)\n        return function cleanup() {\n            socket.off('message', update)\n        }\n    })\n\n    return (\n        <article class=\"main-area\">\n            <textarea\n                class=\"text-area\"\n                readOnly={true}\n                value={message}\n            ></textarea>\n        </article>\n    )\n}\n","import React, { useState } from 'react'\nimport { socket } from '../App'\nimport './Terminal.css'\nexport function Terminal(props) {\n    const [chat, setChat] = useState('')\n    return (\n        <div class=\"user-chat-input\">\n            <textarea\n                class=\"user-input\"\n                onChange={({ target }) => setChat(target.value)}\n            ></textarea>\n            <button\n                class=\"submit\"\n                onClick={() => {\n                    socket.emit('message', chat)\n                }}\n            >\n                submit\n            </button>\n        </div>\n    )\n}\n","import './App.css'\nimport { Header } from './Components/Header'\nimport { Menu } from './Components/Menu'\nimport { Article } from './Components/Article'\nimport { Terminal } from './Components/Terminal'\nimport { useState } from 'react'\n\nimport io from 'socket.io-client'\nconst socket = io('http://127.0.0.1:3000', {})\n\nfunction App() {\n    const [childprops, setProps] = useState({})\n    socket.connect()\n\n    return (\n        <div className=\"App\">\n            {Header()}\n            {Menu()}\n            <div class=\"float-right\">\n                {Article(childprops)}\n                {Terminal({\n                    OnSubmit: (value) => setProps({ chat: value }),\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default App\nexport { socket }\n","import React from 'react'\n\nimport './Header.css'\nexport function Header() {\n    return (\n        <header class=\"app-header\">\n            <h1>react with socket.io</h1>\n        </header>\n    )\n}\n","import './Menu.css'\n\nexport function Menu() {\n    return (\n        <div class=\"drawer-menu\">\n            <ul>\n                <li>1</li>\n                <li>2</li>\n                <li>3</li>\n                <li>4</li>\n            </ul>\n        </div>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}