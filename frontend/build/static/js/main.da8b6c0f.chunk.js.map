{"version":3,"sources":["Components/Header.js","Components/Menu.js","Components/Article.js","Components/Terminal.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Menu","useState","userList","setUserList","useEffect","socket","on","data","map","user","Article","message","setMessage","update","value","off","readOnly","Terminal","chat","setChat","onChange","target","onClick","emit","io","process","connect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAIO,SAASA,IACZ,OACI,wBAAQC,UAAU,aAAlB,SACI,wD,iBCHL,SAASC,IACZ,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KAMA,OALAC,qBAAU,WACNC,EAAOC,GAAG,cAAc,SAACC,GACrBJ,EAAYI,SAIhB,qBAAKR,UAAU,cAAf,SACI,oCACKG,QADL,IACKA,OADL,EACKA,EAAUM,KAAI,SAACC,GAAD,OACX,6BAAKA,W,MCXlB,SAASC,IACZ,MAA4BT,mBAAS,IAArC,mBAAKU,EAAL,KAAcC,EAAd,KACA,SAASC,EAAOC,GACZF,EAAWD,EAAU,KAAOG,GAUhC,OAPAV,qBAAU,WAEN,OADAC,EAAOC,GAAG,UAAWO,GACd,WACHR,EAAOU,IAAI,UAAWF,OAK1B,yBAASd,UAAU,YAAnB,SACI,0BACIA,UAAU,YACViB,UAAU,EACVF,MAAOH,M,MCnBhB,SAASM,IACZ,MAAwBhB,mBAAS,IAAjC,mBAAOiB,EAAP,KAAaC,EAAb,KACA,OACI,sBAAKpB,UAAU,kBAAf,UACI,0BACIA,UAAU,aACVqB,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAcF,EAAQE,EAAOP,UAE3C,wBACIf,UAAU,SACVuB,QAAS,WACLjB,EAAOkB,KAAK,UAAWL,IAH/B,uB,YCJNb,E,MAASmB,GAAGC,8BAClBpB,EAAOqB,UAeQC,MAbf,WACI,OACI,sBAAK5B,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,cAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,WCLD6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.da8b6c0f.chunk.js","sourcesContent":["import React from 'react'\n\nimport './Header.css'\n\nexport function Header() {\n    return (\n        <header className=\"app-header\">\n            <h1>react with socket.io</h1>\n        </header>\n    )\n}\n","import {useEffect, useState} from 'react'\nimport {socket} from '../App'\nimport './Menu.css'\n\nexport function Menu() {\n    const [userList, setUserList] = useState()\n    useEffect(() => {\n        socket.on('userUpdate', (data) => {\n            setUserList(data)\n        })\n    })\n    return (\n        <div className=\"drawer-menu\">\n            <ul>\n                {userList?.map((user) => (\n                    <li>{user}</li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n","import {useState, useEffect} from 'react'\nimport {socket} from '../App'\nimport './Article.css'\n\nexport function Article() {\n    let [message, setMessage] = useState('')\n    function update(value) {\n        setMessage(message + '\\n' + value)\n    }\n\n    useEffect(() => {\n        socket.on('message', update)\n        return function cleanup() {\n            socket.off('message', update)\n        }\n    })\n\n    return (\n        <article className=\"main-area\">\n            <textarea\n                className=\"text-area\"\n                readOnly={true}\n                value={message}\n            ></textarea>\n        </article>\n    )\n}\n","import React, {useState} from 'react'\nimport {socket} from '../App'\nimport './Terminal.css'\nexport function Terminal() {\n    const [chat, setChat] = useState('')\n    return (\n        <div className=\"user-chat-input\">\n            <textarea\n                className=\"user-input\"\n                onChange={({target}) => setChat(target.value)}\n            ></textarea>\n            <button\n                className=\"submit\"\n                onClick={() => {\n                    socket.emit('message', chat)\n                }}\n            >\n                submit\n            </button>\n        </div>\n    )\n}\n","import './App.css'\nimport {Header} from './Components/Header'\nimport {Menu} from './Components/Menu'\nimport {Article} from './Components/Article'\nimport {Terminal} from './Components/Terminal'\nimport io from 'socket.io-client'\n\nconst socket = io(process.env.REACT_APP_WEBHOST)\nsocket.connect()\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header />\n            <Menu />\n            <div className=\"float-right\">\n                <Article />\n                <Terminal />\n            </div>\n        </div>\n    )\n}\n\nexport default App\nexport {socket}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}